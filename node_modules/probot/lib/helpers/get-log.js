"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLog = void 0;
/**
 * A logger backed by [pino](https://getpino.io/)
 *
 * The default log level is `info`, but you can change it by setting the
 * `LOG_LEVEL` environment variable to `trace`, `debug`, `info`, `warn`,
 * `error`, or `fatal`.
 *
 * By default, logs are formatted for readability in development. If you intend
 * to drain logs to a logging service, set the `NODE_ENV` variable, e.g. `NODE_ENV=production probot run index.js`.
 *
 * ```js
 * app.log.debug("…so is this");
 * app.log.trace("Now we're talking");
 * app.log.info("I thought you should know…");
 * app.log.warn("Woah there");
 * app.log.error("ETOOMANYLOGS");
 * app.log.fatal("Goodbye, cruel world!");
 * ```
 */
const pino_1 = __importDefault(require("pino"));
const pino_2 = require("@probot/pino");
function getLog() {
    const pinoOptions = {
        level: process.env.LOG_LEVEL || "info",
        name: "probot",
    };
    const transform = pino_2.getTransformStream();
    transform.pipe(pino_1.default.destination(1));
    return pino_1.default(pinoOptions, transform);
}
exports.getLog = getLog;
//# sourceMappingURL=get-log.js.map